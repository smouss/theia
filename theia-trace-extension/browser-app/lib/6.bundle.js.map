{"version":3,"sources":["webpack:///../node_modules/@theia/filesystem/src/browser/file-selection.ts","webpack:///../node_modules/@theia/filesystem/src/browser/filesystem-frontend-contribution.ts"],"names":[],"mappings":"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","file":"6.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { FileStat } from '../common/filesystem';\n\nexport interface FileSelection {\n    fileStat: FileStat\n}\nexport namespace FileSelection {\n    export function is(arg: Object | undefined): arg is FileSelection {\n        return typeof arg === 'object' && ('fileStat' in arg) && FileStat.is(arg['fileStat']);\n    }\n    export class CommandHandler extends SelectionCommandHandler<FileSelection>Â {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<FileSelection>\n        ) {\n            super(\n                selectionService,\n                arg => FileSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { environment } from '@theia/application-package/lib/environment';\nimport { MaybePromise, SelectionService, isCancelled } from '@theia/core/lib/common';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport {\n    FrontendApplicationContribution, ApplicationShell,\n    NavigatableWidget, NavigatableWidgetOptions,\n    Saveable, WidgetManager, StatefulWidget, FrontendApplication, ExpandableTreeNode\n} from '@theia/core/lib/browser';\nimport { FileSystemWatcher, FileChangeEvent, FileMoveEvent, FileChangeType } from './filesystem-watcher';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { TreeWidgetSelection } from '@theia/core/lib/browser/tree/tree-widget-selection';\nimport { FileSystemPreferences } from './filesystem-preferences';\nimport { FileSelection } from './file-selection';\nimport { FileUploadService } from './file-upload-service';\n\nexport namespace FileSystemCommands {\n\n    export const UPLOAD: Command = {\n        id: 'file.upload',\n        category: 'File',\n        label: 'Upload Files...'\n    };\n\n}\n\n@injectable()\nexport class FileSystemFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(FileSystemWatcher)\n    protected readonly fileSystemWatcher: FileSystemWatcher;\n\n    @inject(MimeService)\n    protected readonly mimeService: MimeService;\n\n    @inject(FileSystemPreferences)\n    protected readonly preferences: FileSystemPreferences;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(FileUploadService)\n    protected readonly uploadService: FileUploadService;\n\n    initialize(): void {\n        this.fileSystemWatcher.onFilesChanged(event => this.run(() => this.updateWidgets(event)));\n        this.fileSystemWatcher.onDidMove(event => this.run(() => this.moveWidgets(event)));\n    }\n\n    onStart?(app: FrontendApplication): MaybePromise<void> {\n        this.updateAssociations();\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.associations') {\n                this.updateAssociations();\n            }\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(FileSystemCommands.UPLOAD, new FileSelection.CommandHandler(this.selectionService, {\n            multi: false,\n            isEnabled: selection => this.canUpload(selection),\n            isVisible: selection => this.canUpload(selection),\n            execute: selection => this.upload(selection)\n        }));\n    }\n\n    protected canUpload({ fileStat }: FileSelection): boolean {\n        return !environment.electron.is() && fileStat.isDirectory;\n    }\n\n    protected async upload(selection: FileSelection): Promise<void> {\n        try {\n            const source = TreeWidgetSelection.getSource(this.selectionService.selection);\n            await this.uploadService.upload(selection.fileStat.uri);\n            if (ExpandableTreeNode.is(selection) && source) {\n                await source.model.expandNode(selection);\n            }\n        } catch (e) {\n            if (!isCancelled(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    protected pendingOperation = Promise.resolve();\n    protected run(operation: () => MaybePromise<void>): Promise<void> {\n        return this.pendingOperation = this.pendingOperation.then(async () => {\n            try {\n                await operation();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    protected async moveWidgets(event: FileMoveEvent): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const [resourceUri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n            promises.push(this.moveWidget(resourceUri, widget, event));\n        }\n        await Promise.all(promises);\n    }\n    protected async moveWidget(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n        const description = this.widgetManager.getDescription(widget);\n        if (!description) {\n            return;\n        }\n        const { factoryId, options } = description;\n        if (!NavigatableWidgetOptions.is(options)) {\n            return;\n        }\n        const newWidget = await this.widgetManager.getOrCreateWidget(factoryId, <NavigatableWidgetOptions>{\n            ...options,\n            uri: newResourceUri.toString()\n        });\n        const oldState = StatefulWidget.is(widget) ? widget.storeState() : undefined;\n        if (oldState && StatefulWidget.is(newWidget)) {\n            newWidget.restoreState(oldState);\n        }\n        const area = this.shell.getAreaFor(widget) || 'main';\n        this.shell.addWidget(newWidget, {\n            area, ref: widget\n        });\n        if (this.shell.activeWidget === widget) {\n            this.shell.activateWidget(newWidget.id);\n        } else if (widget.isVisible) {\n            this.shell.revealWidget(newWidget.id);\n        }\n    }\n    protected createMoveToUri(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): URI | undefined {\n        const path = event.sourceUri.relative(resourceUri);\n        const targetUri = path && event.targetUri.resolve(path);\n        return targetUri && widget.createMoveToUri(targetUri);\n    }\n\n    protected readonly deletedSuffix = ' (deleted from disk)';\n    protected updateWidgets(event: FileChangeEvent): void {\n        const relevantEvent = event.filter(({ type }) => type !== FileChangeType.UPDATED);\n        if (relevantEvent.length) {\n            this.doUpdateWidgets(relevantEvent);\n        }\n    }\n    protected doUpdateWidgets(event: FileChangeEvent): void {\n        const dirty = new Set<string>();\n        const toClose = new Map<string, NavigatableWidget[]>();\n        for (const [uri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n            this.updateWidget(uri, widget, event, { dirty, toClose });\n        }\n        for (const [uriString, widgets] of toClose.entries()) {\n            if (!dirty.has(uriString)) {\n                for (const widget of widgets) {\n                    widget.close();\n                }\n            }\n        }\n    }\n    protected updateWidget(uri: URI, widget: NavigatableWidget, event: FileChangeEvent, { dirty, toClose }: {\n        dirty: Set<string>;\n        toClose: Map<string, NavigatableWidget[]>\n    }): void {\n        const label = widget.title.label;\n        const deleted = label.endsWith(this.deletedSuffix);\n        if (FileChangeEvent.isDeleted(event, uri)) {\n            const uriString = uri.toString();\n            if (Saveable.isDirty(widget)) {\n                if (!deleted) {\n                    widget.title.label += this.deletedSuffix;\n                }\n                dirty.add(uriString);\n            }\n            const widgets = toClose.get(uriString) || [];\n            widgets.push(widget);\n            toClose.set(uriString, widgets);\n        } else if (FileChangeEvent.isAdded(event, uri)) {\n            if (deleted) {\n                widget.title.label = widget.title.label.substr(0, label.length - this.deletedSuffix.length);\n            }\n        }\n    }\n\n    protected updateAssociations(): void {\n        const fileAssociations = this.preferences['files.associations'];\n        const mimeAssociations = Object.keys(fileAssociations).map(filepattern => ({ id: fileAssociations[filepattern], filepattern }));\n        this.mimeService.setAssociations(mimeAssociations);\n    }\n}\n"],"sourceRoot":""}