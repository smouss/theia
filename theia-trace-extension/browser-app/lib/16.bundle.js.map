{"version":3,"sources":["webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-contribution.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-frontend-module.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-service.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-container.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-model.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree-widget.tsx","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/callhierarchy-tree.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-tree/index.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/current-editor-access.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/style/index.css?633b","webpack:///../node_modules/@theia/callhierarchy/src/browser/style/index.css"],"names":[],"mappings":"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","file":"16.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MenuModelRegistry, Command, CommandRegistry } from '@theia/core/lib/common';\nimport { AbstractViewContribution, OpenViewArguments, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\nimport { CallHierarchyTreeWidget } from './callhierarchy-tree/callhierarchy-tree-widget';\nimport { CALLHIERARCHY_ID } from './callhierarchy';\nimport { CurrentEditorAccess } from './current-editor-access';\nimport { CallHierarchyServiceProvider } from './callhierarchy-service';\n\nexport const CALL_HIERARCHY_TOGGLE_COMMAND_ID = 'callhierachy:toggle';\nexport const CALL_HIERARCHY_LABEL = 'Call Hierarchy';\n\nexport namespace CallHierarchyCommands {\n    export const OPEN: Command = {\n        id: 'callhierarchy:open',\n        label: 'Open Call Hierarchy'\n    };\n}\n\n@injectable()\nexport class CallHierarchyContribution extends AbstractViewContribution<CallHierarchyTreeWidget> {\n\n    @inject(CurrentEditorAccess) protected readonly editorAccess: CurrentEditorAccess;\n    @inject(CallHierarchyServiceProvider) protected readonly callHierarchyServiceProvider: CallHierarchyServiceProvider;\n    constructor() {\n        super({\n            widgetId: CALLHIERARCHY_ID,\n            widgetName: CALL_HIERARCHY_LABEL,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: CALL_HIERARCHY_TOGGLE_COMMAND_ID,\n            toggleKeybinding: 'ctrlcmd+shift+f1'\n        });\n    }\n\n    protected isCallHierarchyAvailable(): boolean {\n        const selection = this.editorAccess.getSelection();\n        const languageId = this.editorAccess.getLanguageId();\n        return !!selection && !!languageId && !!this.callHierarchyServiceProvider.get(languageId);\n    }\n\n    async openView(args?: Partial<OpenViewArguments>): Promise<CallHierarchyTreeWidget> {\n        const widget = await super.openView(args);\n        const selection = this.editorAccess.getSelection();\n        const languageId = this.editorAccess.getLanguageId();\n        widget.initializeModel(selection, languageId);\n        return widget;\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CallHierarchyCommands.OPEN, {\n            execute: () => this.openView({\n                toggle: false,\n                activate: true\n            }),\n            isEnabled: this.isCallHierarchyAvailable.bind(this)\n        });\n        super.registerCommands(commands);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        const menuPath = [...EDITOR_CONTEXT_MENU, 'navigation'];\n        menus.registerMenuAction(menuPath, {\n            commandId: CallHierarchyCommands.OPEN.id,\n            label: CALL_HIERARCHY_LABEL\n        });\n        super.registerMenus(menus);\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: CallHierarchyCommands.OPEN.id,\n            keybinding: 'ctrlcmd+f1'\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CallHierarchyContribution } from './callhierarchy-contribution';\nimport { bindContributionProvider } from '@theia/core/lib/common';\nimport { CallHierarchyService, CallHierarchyServiceProvider } from './callhierarchy-service';\nimport { WidgetFactory, bindViewContribution } from '@theia/core/lib/browser';\nimport { CALLHIERARCHY_ID } from './callhierarchy';\nimport { createHierarchyTreeWidget } from './callhierarchy-tree';\nimport { CurrentEditorAccess } from './current-editor-access';\n\nimport { ContainerModule } from 'inversify';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bind(CurrentEditorAccess).toSelf().inSingletonScope();\n\n    bindContributionProvider(bind, CallHierarchyService);\n    bind(CallHierarchyServiceProvider).to(CallHierarchyServiceProvider).inSingletonScope();\n\n    bindViewContribution(bind, CallHierarchyContribution);\n\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: CALLHIERARCHY_ID,\n        createWidget: () => createHierarchyTreeWidget(context.container)\n    }));\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { Location } from 'vscode-languageserver-types';\nimport { Definition, Caller } from './callhierarchy';\nimport { ContributionProvider } from '@theia/core/lib/common';\n\nexport const CallHierarchyService = Symbol('CallHierarchyService');\n\nexport interface CallHierarchyService {\n    readonly languageId: string\n    getRootDefinition(location: Location): Promise<Definition | undefined>\n    getCallers(definition: Definition): Promise<Caller[] | undefined>\n}\n\n@injectable()\nexport class CallHierarchyServiceProvider {\n\n    @inject(ContributionProvider) @named(CallHierarchyService)\n    protected readonly contributions: ContributionProvider<CallHierarchyService>;\n\n    get(languageId: string): CallHierarchyService | undefined {\n        return this.contributions.getContributions().find(service => languageId === service.languageId);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { createTreeContainer, Tree, TreeImpl, TreeModel, TreeModelImpl, TreeWidget } from '@theia/core/lib/browser';\nimport { CallHierarchyTree } from './callhierarchy-tree';\nimport { CallHierarchyTreeModel } from './callhierarchy-tree-model';\nimport { CallHierarchyTreeWidget } from './callhierarchy-tree-widget';\n\nfunction createHierarchyTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(CallHierarchyTree).toSelf();\n    child.rebind(Tree).toService(CallHierarchyTree);\n\n    child.unbind(TreeModelImpl);\n    child.bind(CallHierarchyTreeModel).toSelf();\n    child.rebind(TreeModel).toService(CallHierarchyTreeModel);\n\n    child.bind(CallHierarchyTreeWidget).toSelf();\n    child.rebind(TreeWidget).toService(CallHierarchyTreeWidget);\n\n    return child;\n}\n\nexport function createHierarchyTreeWidget(parent: interfaces.Container): CallHierarchyTreeWidget {\n    return createHierarchyTreeContainer(parent).get<CallHierarchyTreeWidget>(CallHierarchyTreeWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { TreeModelImpl, TreeNode } from '@theia/core/lib/browser';\nimport { CallHierarchyTree, DefinitionNode } from './callhierarchy-tree';\nimport { CallHierarchyServiceProvider } from '../callhierarchy-service';\nimport { Location } from 'vscode-languageserver-types';\n\n@injectable()\nexport class CallHierarchyTreeModel extends TreeModelImpl {\n\n    @inject(CallHierarchyTree) protected readonly tree: CallHierarchyTree;\n    @inject(CallHierarchyServiceProvider) protected readonly callHierarchyServiceProvider: CallHierarchyServiceProvider;\n\n    getTree(): CallHierarchyTree {\n        return this.tree;\n    }\n\n    async initializeCallHierarchy(languageId: string | undefined, location: Location | undefined): Promise<void> {\n        this.tree.root = undefined;\n        this.tree.callHierarchyService = undefined;\n        if (languageId && location) {\n            const callHierarchyService = this.callHierarchyServiceProvider.get(languageId);\n            if (callHierarchyService) {\n                this.tree.callHierarchyService = callHierarchyService;\n                const rootDefinition = await callHierarchyService.getRootDefinition(location);\n                if (rootDefinition) {\n                    const rootNode = DefinitionNode.create(rootDefinition, undefined);\n                    this.tree.root = rootNode;\n                }\n            }\n        }\n    }\n\n    protected doOpenNode(node: TreeNode): void {\n        // do nothing (in particular do not expand the node)\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport {\n    ContextMenuRenderer, TreeWidget, NodeProps, TreeProps, TreeNode,\n    TreeModel, DockPanel\n} from '@theia/core/lib/browser';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { DefinitionNode, CallerNode } from './callhierarchy-tree';\nimport { CallHierarchyTreeModel } from './callhierarchy-tree-model';\nimport { CALLHIERARCHY_ID, Definition, Caller } from '../callhierarchy';\nimport URI from '@theia/core/lib/common/uri';\nimport { Location, Range, SymbolKind } from 'vscode-languageserver-types';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport * as React from 'react';\n\nexport const HIERARCHY_TREE_CLASS = 'theia-CallHierarchyTree';\nexport const DEFINITION_NODE_CLASS = 'theia-CallHierarchyTreeNode';\nexport const DEFINITION_ICON_CLASS = 'theia-CallHierarchyTreeNodeIcon';\n\n@injectable()\nexport class CallHierarchyTreeWidget extends TreeWidget {\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(CallHierarchyTreeModel) readonly model: CallHierarchyTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\n        @inject(LabelProvider) protected readonly labelProvider: LabelProvider,\n        @inject(EditorManager) readonly editorManager: EditorManager\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        this.id = CALLHIERARCHY_ID;\n        this.title.label = 'Call Hierarchy';\n        this.title.caption = 'Call Hierarchy';\n        this.title.iconClass = 'fa call-hierarchy-tab-icon';\n        this.title.closable = true;\n        this.addClass(HIERARCHY_TREE_CLASS);\n        this.toDispose.push(this.model.onSelectionChanged(selection => {\n            const node = selection[0];\n            if (node) {\n                this.openEditor(node, true);\n            }\n        }));\n        this.toDispose.push(this.model.onOpenNode((node: TreeNode) => {\n            this.openEditor(node, false);\n        }));\n    }\n\n    initializeModel(selection: Location | undefined, languageId: string | undefined): void {\n        this.model.initializeCallHierarchy(languageId, selection);\n    }\n\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (DefinitionNode.is(node)) {\n            classNames.push(DEFINITION_NODE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        const elementAttrs = super.createNodeAttributes(node, props);\n        return {\n            ...elementAttrs,\n        };\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        return super.renderTree(model)\n            || <div className='theia-widget-noInfo'>No callers have been detected.</div>;\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (DefinitionNode.is(node)) {\n            return this.decorateDefinitionCaption(node.definition);\n        }\n        if (CallerNode.is(node)) {\n            return this.decorateCallerCaption(node.caller);\n        }\n        return 'caption';\n    }\n\n    protected decorateDefinitionCaption(definition: Definition): React.ReactNode {\n        const containerName = definition.containerName;\n        const symbol = definition.symbolName;\n        const location = this.labelProvider.getName(new URI(definition.location.uri));\n        const container = (containerName) ? containerName + ' — ' + location : location;\n        return <div className='definitionNode'>\n            <div className={'symbol-icon ' + this.toIconClass(definition.symbolKind)}></div>\n            <div className='definitionNode-content'>\n                <span className='symbol'>\n                    {symbol}\n                </span>\n                <span className='container'>\n                    {container}\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected decorateCallerCaption(caller: Caller): React.ReactNode {\n        const definition = caller.callerDefinition;\n        const containerName = definition.containerName;\n        const symbol = definition.symbolName;\n        const referenceCount = caller.references.length;\n        const location = this.labelProvider.getName(new URI(definition.location.uri));\n        const container = (containerName) ? containerName + ' — ' + location : location;\n        return <div className='definitionNode'>\n            <div className={'symbol-icon ' + this.toIconClass(definition.symbolKind)}></div>\n            <div className='definitionNode-content'>\n                <span className='symbol'>\n                    {symbol}\n                </span>\n                <span className='referenceCount'>\n                    {(referenceCount > 1) ? `[${referenceCount}]` : ''}\n                </span>\n                <span className='container'>\n                    {container}\n                </span>\n            </div>\n        </div>;\n    }\n\n    // tslint:disable-next-line:typedef\n    protected toIconClass(symbolKind: number) {\n        switch (symbolKind) {\n            case SymbolKind.File: return 'file';\n            case SymbolKind.Module: return 'module';\n            case SymbolKind.Namespace: return 'namespace';\n            case SymbolKind.Package: return 'package';\n            case SymbolKind.Class: return 'class';\n            case SymbolKind.Method: return 'method';\n            case SymbolKind.Property: return 'property';\n            case SymbolKind.Field: return 'field';\n            case SymbolKind.Constructor: return 'constructor';\n            case SymbolKind.Enum: return 'enum';\n            case SymbolKind.Interface: return 'interface';\n            case SymbolKind.Function: return 'function';\n            case SymbolKind.Variable: return 'variable';\n            case SymbolKind.Constant: return 'constant';\n            case SymbolKind.String: return 'string';\n            case SymbolKind.Number: return 'number';\n            case SymbolKind.Boolean: return 'boolean';\n            case SymbolKind.Array: return 'array';\n            default: return 'unknown';\n        }\n    }\n\n    private openEditor(node: TreeNode, keepFocus: boolean): void {\n        let location: Location | undefined;\n        if (DefinitionNode.is(node)) {\n            location = node.definition.location;\n        }\n        if (CallerNode.is(node)) {\n            location = node.caller.references[0];\n        }\n        if (location) {\n            this.editorManager.open(\n                new URI(location.uri), {\n                    mode: keepFocus ? 'reveal' : 'activate',\n                    selection: Range.create(location.range.start, location.range.end)\n                }\n            ).then(editorWidget => {\n                if (editorWidget.parent instanceof DockPanel) {\n                    editorWidget.parent.selectWidget(editorWidget);\n                }\n            });\n        }\n    }\n\n    storeState(): object {\n        const callHierarchyService = this.model.getTree().callHierarchyService;\n        if (this.model.root && callHierarchyService) {\n            return {\n                root: this.deflateForStorage(this.model.root),\n                languageId: callHierarchyService.languageId,\n            };\n        } else {\n            return {};\n        }\n    }\n\n    restoreState(oldState: object): void {\n        // tslint:disable-next-line:no-any\n        if ((oldState as any).root && (oldState as any).languageId) {\n            // tslint:disable-next-line:no-any\n            this.model.root = this.inflateFromStorage((oldState as any).root);\n            // tslint:disable-next-line:no-any\n            this.model.initializeCallHierarchy((oldState as any).languageId, (this.model.root as DefinitionNode).definition.location);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode, TreeImpl } from '@theia/core/lib/browser';\n\nimport { Definition, Caller } from '../callhierarchy';\nimport { CallHierarchyService } from '../callhierarchy-service';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@injectable()\nexport class CallHierarchyTree extends TreeImpl {\n\n    protected _callHierarchyService: CallHierarchyService | undefined;\n\n    set callHierarchyService(callHierarchyService: CallHierarchyService | undefined) {\n        this._callHierarchyService = callHierarchyService;\n    }\n\n    get callHierarchyService(): CallHierarchyService | undefined {\n        return this._callHierarchyService;\n    }\n\n    async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (!this.callHierarchyService) {\n            return Promise.resolve([]);\n        }\n        if (parent.children.length > 0) {\n            return Promise.resolve([...parent.children]);\n        }\n        let definition: Definition | undefined;\n        if (DefinitionNode.is(parent)) {\n            definition = parent.definition;\n        } else if (CallerNode.is(parent)) {\n            definition = parent.caller.callerDefinition;\n        }\n        if (definition) {\n            const callers = await this.callHierarchyService.getCallers(definition);\n            if (!callers) {\n                return Promise.resolve([]);\n            }\n            return this.toNodes(callers, parent);\n        }\n        return Promise.resolve([]);\n    }\n\n    protected toNodes(callers: Caller[], parent: CompositeTreeNode): TreeNode[] {\n        return callers.map(caller => this.toNode(caller, parent));\n    }\n\n    protected toNode(caller: Caller, parent: CompositeTreeNode | undefined): TreeNode {\n        return CallerNode.create(caller, parent as TreeNode);\n    }\n}\n\nexport interface DefinitionNode extends SelectableTreeNode, ExpandableTreeNode {\n    definition: Definition;\n}\n\nexport namespace DefinitionNode {\n    export function is(node: TreeNode | undefined): node is DefinitionNode {\n        return !!node && 'definition' in node;\n    }\n\n    export function create(definition: Definition, parent: TreeNode | undefined): DefinitionNode {\n        const name = definition.symbolName;\n        const id = createId(definition, parent);\n        return <DefinitionNode>{\n            id, definition, name, parent,\n            visible: true,\n            children: [],\n            expanded: false,\n            selected: false,\n        };\n    }\n}\n\nexport interface CallerNode extends SelectableTreeNode, ExpandableTreeNode {\n    caller: Caller;\n}\n\nexport namespace CallerNode {\n    export function is(node: TreeNode | undefined): node is CallerNode {\n        return !!node && 'caller' in node;\n    }\n\n    export function create(caller: Caller, parent: TreeNode | undefined): CallerNode {\n        const callerDefinition = caller.callerDefinition;\n        const name = callerDefinition.symbolName;\n        const id = createId(callerDefinition, parent);\n        return <CallerNode>{\n            id, caller, name, parent,\n            visible: true,\n            children: [],\n            expanded: false,\n            selected: false,\n        };\n    }\n}\n\nfunction createId(definition: Definition, parent: TreeNode | undefined): string {\n    const idPrefix = (parent) ? parent.id + '/' : '';\n    const id = idPrefix + Md5.hashStr(JSON.stringify(definition));\n    return id;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './callhierarchy-tree';\nexport * from './callhierarchy-tree-model';\nexport * from './callhierarchy-tree-widget';\nexport * from './callhierarchy-tree-container';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Location, SymbolKind } from 'vscode-languageserver-types';\n\nexport const CALLHIERARCHY_ID = 'callhierarchy';\n\nexport interface Definition {\n    location: Location,\n    symbolName: string,\n    symbolKind: SymbolKind,\n    containerName: string,\n    callers: Caller[] | undefined\n}\n\nexport interface Caller {\n    callerDefinition: Definition,\n    references: Location[]\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { EditorManager, TextEditor } from '@theia/editor/lib/browser';\nimport { Location } from 'vscode-languageserver-types';\n\n@injectable()\nexport class CurrentEditorAccess {\n\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    getSelection(): Location | undefined {\n        const activeEditor = this.getCurrentEditor();\n        if (!activeEditor) {\n            return;\n        }\n        const range = activeEditor.selection;\n        const uri = activeEditor.uri.toString();\n        return <Location>{ range, uri };\n    }\n\n    getLanguageId(): string | undefined {\n        const activeEditor = this.getCurrentEditor();\n        if (!activeEditor) {\n            return;\n        }\n        return activeEditor.document.languageId;\n    }\n\n    protected getCurrentEditor(): TextEditor | undefined {\n        const activeEditor = this.editorManager.currentEditor;\n        if (activeEditor) {\n            return activeEditor.editor;\n        }\n        return undefined;\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-CallHierarchyTree {\\n    font-size: var(--theia-ui-font-size1);\\n    color: var(--theia-ui-font-color1);\\n}\\n\\n.theia-CallHierarchyTree .theia-TreeNode {\\n    width: 100%;\\n}\\n\\n.theia-CallHierarchyTree .theia-ExpansionToggle {\\n    min-width: 9px;\\n    padding-right: 4px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode {\\n    display: flex;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode {\\n    width: calc(100% - 32px);\\n}\\n\\n.theia-CallHierarchyTree .definitionNode div {\\n    margin-right: 5px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .symbol {\\n    padding-right: 4px;\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .referenceCount {\\n    color: var(--theia-ui-font-color3);\\n}\\n\\n.theia-CallHierarchyTree .definitionNode .container {\\n    color: var(--theia-ui-font-color2);\\n}\\n\\n.call-hierarchy-tab-icon::before {\\n    content: \\\"\\\\F0AB\\\"\\n}\\n\\n.theia-CallHierarchyTree .definitionNode-content {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}